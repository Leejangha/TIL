1. 이진탐색은 배열의 크기를 알고 정렬이 되어있는 배열에 사용할 수 있습니다.
배열의 중간값이 찾고자 하는 값보다 클 경우 중간값보다 큰 값들은 탐색하지 않습니다.
배열의 중간값이 찾고자 하는 값보다 작을 경우 중간값 보다 작은 값들은 탐색합니다.
위의 과정을 반복하여 탐색범위를 1/2로 줄여가면서 탐색을 합니다.

2.
def binarySearch(a, N, key):
    start = 0
    end = N-1
    a.sort()

    # 배열의 중간값 설정
    mid = (start + end) // 2

    # 탐색 시작값이 중간값이 될 때 까지 반복
    while (start != mid:

        # 중간값이 키값보다 클 경우 마지막 범위를 중간값 전 까지
        if a[mid] > key:
            end = mid-1

        # 중간값이 키값보다 작을 경우 시작 범위를 중간값 다음부터
        elif a[mid] < key:
            start = mid+1

        # 중간값이 키값과 같을경우 True를 반환
        else:
            return True

        # 다음 탐색 범위의 중간값 갱신
        mid = (start + end) // 2

        # 중간값이 키값과 같을경우 True를 반환
        if a[mid] == key:
            return True
    # 배열내에서 키값을 찾지 못했을 경우 False를 반환
    )
    return False